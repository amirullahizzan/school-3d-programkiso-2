
----------------------------------------------------------------------
ゲームプログラム応用　課題　文字列描画演出
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲームプログラム応用->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲームプログラム応用_課題00_00000000_○○○○○ 】みたいな感じで）

以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


今回のプロジェクトでは、すでにフォントデータの読み込みはおこなっており、
（フォントサイズは２０です）
文字列はそのフォントハンドルを使っておこなっています。


課題１：黄色い文字列：スペースキーで１秒間だけ揺らす

	そのためには１秒間を数えるような変数が必要です。（例えば：int shake_frame; みたいな）
	その時間だけ文字列をランダムに揺らします。

	//	スペースキーを押した時
	if( PushHitKey( KEY_INPUT_SPACE ) ){
	}


課題２：水色の文字列：上下キーで選択文字列を切り替え（その文字列の所が分かるようなバーの表示）

	各文字列つの長さを取得する関数は以下のようなものになります。
	↓
	文字列幅 = GetDrawStringWidthToHandle( "描画したい文字列", -1, フォントハンドル );

	もしくは GetDrawStringSizeToHandle 関数で、幅と高さの取得ができますので
	そこらへんは使いやすい関数を使ってください。
	↓
	int 幅, 高さ;
	GetDrawStringSizeToHandle( &幅, &高さ, NULL, menu_text[i], -1, font_handle );

	この長さを使って選択番号の文字列が分かるように四角の描画をおこないます。

	//	四角を描画
	DrawFillBox( 左, 上, 右, 下, GetColor( 0, 0, 128 ) );


課題３：緑色の文字列：徐々に透明度を変更しながら画面上に移動

	「こういう感じで.exe」では、Ｙ座標を減らしていき、０になったら３００に戻すを繰り返しています。
	↓
	pos3.y -= 1;
	if( pos3.y < 0.0f ){
		pos3.y = 200.0f;
	}

	この描画座標に合わせて透明度を設定することで「こういう感じで.exe」のような見た目になります。

	//	透明度を設定する
	SetDrawBlendMode( DX_BLENDMODE_ALPHA, alpha );
	//	文字列の描画をおこなう
	DrawStringFToHandle( x, y, sample_text[i], GetColor( 0, 255, 0 ), font_handle );
	//	透明度設定を元に戻す
	SetDrawBlendMode( DX_BLENDMODE_NOBLEND, 0 );


課題４：白色の文字列：右揃えにして、上下キーで選択文字列を切り替え（その文字列が「<<」の所に来るように）

	現状でも、上下キーで選択番号の切り替えをおこなっており、
	描画の所で選択番号の文字列の色を変更している処理は入っています。

	ここでの実装では、この選択番号番目の文字列が「 << 」の所に来るような実装をします。
	（目安としての「<<」は、すでに「Ｘ：750　Ｙ：300」の所に描画しています）

	右揃えにするための基準の座標も「<<」を基準にします。
	右揃え：基準の座標から、その文字列の長さ分Ｘ座標をずらします。


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。
